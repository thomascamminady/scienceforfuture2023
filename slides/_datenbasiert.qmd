

## Und was ist dann KI?

![Randall Munroe, [https://xkcd.com/1838](https://xkcd.com/1838),  (CC BY-NC 2.5)](assets/fig/xkcd_machine_learning.png){height=500px}


## Und was ist dann KI?

KI = Datenbasierter Algorithmus



## Datenbasierte Algorithmen
```{dot}
//| file: assets/dot/datenbasierter_algorithmus.dot
```

## Datenbasierte Algorithmen
```{dot}
//| file: assets/dot/autopilot.dot
```

## Datenbasierte Algorithmen
```{dot}
//| file: assets/dot/chatgpt.dot
```



## Klassifizierung von Pinguinen

**Situation**: Wissenschaftler_innen möchten den Pinguinbestand überwachen.

![](assets/fig/palmer_penguins.jpeg){width=1000}


**Problem**: Nur geschultes Personal ist dazu in der Lage.

## Klassifizierung von Pinguinen

**Ausweg**: Muster nutzen und erkennen


:::: {.columns}

::: {.column width="30%"}
![](assets/fig/palmer_penguins.jpeg)
![](assets/fig/bill_length_depth.jpeg)


Illustrationen: Allison Horst

:::



::: {.column width="70%"}

```{python}
from scienceforfuture2023.palmer import PalmerPenguins

pp = PalmerPenguins()
penguins = pp.df
scale = pp.scale
pp.chart()
```

Daten: Gorman KB, Williams TD, Fraser WR

:::

::::


## Klassifizierung von Pinguinen

**Idee**: Wir entwickeln einen Klassifizierungsalgorithmus der uns bei gegebener Schnabellänge und -tiefe sagen kann, um welchen Pinguin es sich handelt.

**Vorteil**: Messung ist auch für ungeschultes Personal möglich.


## Training

```{python}
pp.chart().properties(width=800)
```

## Training

```{python}
pp.chart(discard_chinstrap=True).properties(width=800)
```

## Training

```{python}
chart_penguins = pp.chart(discard_chinstrap=True, sample_n=30).properties(width=800)
chart_penguins
```



## Training

```{python}
chart_penguins + pp.line()
```

## Training
```{python}
chart_penguins + pp.line() + pp.area()
```

## Training

:::: {.columns}

::: {.column width="40%"}

```{python}
(chart_penguins + pp.line() + pp.area()).properties(width=200, height=100)
```

:::


::: {.column width="60%"}
```{python}
# | echo: true


def gerade(x):
    m = (22 - 13) / (60 - 30)
    return m * (x - 30) + 13


def algorithmus(laenge, tiefe):
    if laenge > gerade(tiefe):
        return "Adelie"
    else:
        return "Gentoo"


```

:::
::::

Der Trainingsprozess liefert einen Algorithmus zur Klassifizierung von Pinguinen.

```{dot}
//| fig-width: 500px
//| fig-height: 200px
//| file: assets/dot/datenbasierter_algorithmus.dot
```


## Anwendung des Algorithmus
```{python}
pp.line() + pp.area()
```


## Anwendung des Algorithmus
```{python}
(
    pp.area()
    + pp.line()
    + pp.chart(discard_chinstrap=True, color_species=False).properties(width=800)
)
```

## Anwendung des Algorithmus
```{python}
(pp.area() + pp.line() + pp.chart(discard_chinstrap=True).properties(width=800))
```

Nur 1 Pinguin ist falsch klassifiziert.

## Zusammenfassung

:::: {.columns}



::: {.column width="50%"}

Klassische Algorithmen

```{dot}
//| fig-width: 500px
//| file: assets/dot/simple_algorithm.dot

```

:::

::: {.column width="50%"}

Datenbasierte Algorithmen

```{dot}
//| fig-width: 500px
//| file: assets/dot/datenbasierter_algorithmus.dot

```

:::

::::
